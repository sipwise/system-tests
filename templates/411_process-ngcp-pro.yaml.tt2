[%
  hostname = ngcp.get_hostname();

  is_mgmt = ngcp.has_role(hostname, 'mgmt');
  is_proxy = ngcp.has_role(hostname, 'proxy');
  is_lb = ngcp.has_role(hostname, 'lb');
-%]

process:
  glusterfs:
    running: true

  # We have to use a truncated process name because that's the COMM limit
  # on Linux (15 characters). Real name: ngcp-hb-watchdog.
  ngcp-hb-watchdo:
    running: false

  heartbeat:
    running: false

  corosync:
    running: [% ha.gcs == 'corosync' ? 'true' : 'false' %]

  pacemakerd:
    running: [% ha.crm == 'pacemaker' ? 'true' : 'false' %]

  pacemaker-based:
    running: [% ha.crm == 'pacemaker' ? 'true' : 'false' %]

  # We have to use a truncated process name because that's the COMM limit
  # on Linux (15 characters). Real name: pacemaker-fenced.
  pacemaker-fence:
    running: [% ha.crm == 'pacemaker' ? 'true' : 'false' %]

  pacemaker-execd:
    running: [% ha.crm == 'pacemaker' ? 'true' : 'false' %]

  pacemaker-attrd:
    running: [% ha.crm == 'pacemaker' ? 'true' : 'false' %]

  # We have to use a truncated process name because that's the COMM limit
  # on Linux (15 characters). Real name: pacemaker-shedulerd.
  pacemaker-sched:
    running: [% ha.crm == 'pacemaker' ? 'true' : 'false' %]

  # We have to use a truncated process name because that's the COMM limit
  # on Linux (15 characters). Real name: pacemaker-controld.
  pacemaker-contr:
    running: [% ha.crm == 'pacemaker' ? 'true' : 'false' %]

  influxdb-relay:
    running: false

  monit:
    running: [% general.process_handler == 'monit' ? 'true' : 'false' %]

  ngcp-licensed:
    running: [% general.license_key != '' || general.anonymous_usage_statistics == 'yes' ? 'true' : 'false' %]

  "ngcp-faxserver ":
    running: {{if and [% is_proxy ? 1 : 0 %] .Vars.NODE_ACTIVE}} true {{else}} false {{end}}

  ngcp-snmp-agent:
    running: true

  ngcp-voisniff:
    running: {{if and [% (is_proxy || is_lb) && voisniff.daemon.start == 'yes' ? 1 : 0 %] .Vars.NODE_ACTIVE}} true {{else}} false {{end}}

  # We have to use a truncated process name because that's the COMM limit
  # on Linux (15 characters). Real name: prometheus-haproxy-exporter.
  prometheus-hapr:
    running: [% monitoring.backend == 'prometheus' && is_lb && haproxy.enable && general.ngcp_type == 'carrier' ? 'true' : 'false' %]

  snmpd:
    running: true

  # Obsolete, never running.
  janus:
    running: false

command:
  # Obsolete, never running.
  "pgrep -c -n -f '[r]tcengine.js'":
    exit-status: 1
    stdout: []
    stderr: []
  # ngcp-rest-api runs under the node binary, so we can't use "process" for checking
  "pgrep -c -n -f '^ngcp-rest-api'":
    exit-status: [% is_mgmt && rest_api.enable == 'yes' ? '0' : '1' %]
    stdout:
      - "[% is_mgmt && rest_api.enable == 'yes' ? '1' : '0' %]"
    stderr: []
