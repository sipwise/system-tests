[%
  hostname = ngcp.get_hostname();

  is_proxy = ngcp.has_role(hostname, 'proxy');
  is_lb = ngcp.has_role(hostname, 'lb');
  is_rtp = ngcp.has_role(hostname, 'rtp');
-%]
[% PERL -%]
    my $node_state = qx(ngcp-check-active -v);
    chomp $node_state;

    $stash->set(node_state => $node_state);
[% END -%]

process:
  glusterfs:
    running: true

  # We have to use a truncated process name because that's the COMM limit
  # on Linux (15 characters).
  ngcp-hb-watchdo:
    running: true

  heartbeat:
    running: true

  influxdb-relay:
    running: true

  monit:
    running: [% general.process_handler == 'monit' ? 'true' : 'false' %]

  ngcp-licensed:
    running: [% general.license_key != '' || general.anonymous_usage_statistics == 'yes' ? 'true' : 'false' %]

  ngcp-faxserver:
    running: [% is_proxy && node_state == 'active' ? 'true' : 'false' %]

  ngcp-snmp-agent:
    running: true

  ngcp-voisniff:
    running: [% (is_proxy || is_lb || is_rtp) && node_state == 'active' ? 'true' : 'false' %]

  snmpd:
    running: true

  janus:
    running: [% janus.enable == "yes" && node_state == 'active' ? 'true' : 'false' %]

command:
  "pgrep -c -n -f '[r]tcengine.js'":
[% IF rtcengine.enable == "yes" && node_state == 'active' -%]
    exit-status: 0
    stdout:
      - "1"
[% ELSE -%]
    exit-status: 1
    stdout: []
[% END -%]
    stderr: []

  "pgrep -c -n -f '[c]omx-fileshare.js'":
[% IF fileshare.enable == "yes" && node_state == 'active' -%]
    exit-status: 0
    stdout:
      - "1"
[% ELSE -%]
    exit-status: 1
    stdout: []
[% END -%]
