[%
  hostname = ngcp.get_hostname();

  is_proxy = ngcp.has_role(hostname, 'proxy');
  is_lb = ngcp.has_role(hostname, 'lb');
  is_mgmt = ngcp.has_role(hostname, 'mgmt');
  is_db = ngcp.has_role(hostname, 'db');
  is_rtp = ngcp.has_role(hostname, 'rtp');
  is_li_dist = ngcp.has_role(hostname, 'li_dist');
  is_li = ngcp.has_role(hostname, 'li');
-%]

service:
  asterisk.service:
    enabled: [% general.process_handler == 'none' && asterisk.enable == "yes" ? 'true' : 'false' %]
    running: {{if and [% is_proxy && asterisk.enable == "yes" ? 1 : 0 %] .Vars.NODE_ACTIVE}} true {{else}} false {{end}}

  corosync:
    enabled: [% ha.gcs == 'corosync' ? 'true' : 'false' %]
    running: [% ha.gcs == 'corosync' ? 'true' : 'false' %]

  coturn.service:
    enabled: [% is_rtp && turnserver.enable == 'yes' ? 'true' : 'false' %]
    running: [% is_rtp && turnserver.enable == 'yes' ? 'true' : 'false' %]

  dnsmasq.service:
    enabled: false
    running: {{if and [% is_mgmt && bootenv.dhcp.enable == "yes" ? 1 : 0 %] .Vars.NODE_ACTIVE}} true {{else}} false {{end}}

  haproxy.service:
    enabled: [% is_lb && haproxy.enable == "yes" && general.ngcp_type == 'carrier' ? 'true' : 'false' %]
    running: [% is_lb && haproxy.enable == "yes" && general.ngcp_type == 'carrier' ? 'true' : 'false' %]

  kamailio-lb.service:
    enabled: [% general.process_handler == 'none' && kamailio.lb.enable == "yes" ? 'true' : 'false' %]
    running: {{if and [% is_lb && kamailio.lb.enable == "yes" ? 1 : 0 %] .Vars.NODE_ACTIVE}} true {{else}} false {{end}}

  kamailio-proxy.service:
    enabled: [% general.process_handler == 'none' && kamailio.proxy.enable == "yes" ? 'true' : 'false' %]
    running: {{if and [% is_proxy && kamailio.proxy.enable == "yes" ? 1 : 0 %] .Vars.NODE_ACTIVE}} true {{else}} false {{end}}

  ngcp-license-client.service:
    enabled: [% general.license_key != '' || general.anonymous_usage_statistics == 'yes' ? 'true' : 'false' %]
    running: [% general.license_key != '' || general.anonymous_usage_statistics == 'yes' ? 'true' : 'false' %]

  ngcp-mediator.service:
    enabled: [% general.process_handler == 'none' && mediator.enable == 'yes' ? 'true' : 'false' %]
    running: {{if and [% is_proxy && mediator.enable == "yes" ? 1 : 0 %] .Vars.NODE_ACTIVE}} true {{else}} false {{end}}

  ngcp-panel.service:
    enabled: [% is_mgmt && www_admin.enable == 'yes' ? 'true' : 'false' %]
    running: [% is_mgmt && www_admin.enable == 'yes' ? 'true' : 'false' %]

  ngcp-rate-o-mat.service:
[% IF rateomat.ha_mode == 'active-active' -%]
    enabled: [% rateomat.enable == "yes" ? 'true' : 'false' %]
    running: [% is_proxy && rateomat.enable == "yes" ? 'true' : 'false' %]
[% ELSE -%]
    enabled: [% general.process_handler == 'none' && asterisk.enable == "yes" ? 'true' : 'false' %]
    running: {{if and [% is_proxy && rateomat.enable == "yes" ? 1 : 0 %] .Vars.NODE_ACTIVE}} true {{else}} false {{end}}
[% END -%]

  ngcp-rtpengine-recording-daemon.service:
    enabled: [% general.process_handler == 'none' && rtpengine.recording.enable == "yes" ? 'true' : 'false' %]
    running: {{if and [% is_rtp && rtpengine.recording.enable == "yes" ? 1 : 0 %] .Vars.NODE_ACTIVE}} true {{else}} false {{end}}

  ngcp-rtpengine-daemon.service:
    enabled: [% general.process_handler == 'none' && rtpengine.enable == "yes" ? 'true' : 'false' %]
    running: {{if and [% is_rtp && rtpengine.enable == "yes" ? 1 : 0 %] .Vars.NODE_ACTIVE}} true {{else}} false {{end}}

  ngcp-sems.service:
    enabled: [% general.process_handler == 'none' && b2b.enable == "yes" && general.ngcp_type == 'spce' ? 'true' : 'false' %]
    running: [% general.ngcp_type == 'spce' ? 'true' : 'false' %]

  ngcp-witnessd.service:
    enabled: true
    running: true

  nginx.service:
    enabled: [% (is_mgmt || is_lb || is_li_dist) && nginx.enable == 'yes' ? 'true' : 'false' %]
    running: [% (is_mgmt || is_lb || is_li_dist) && nginx.enable == 'yes' ? 'true' : 'false' %]

  pacemaker.service:
    enabled: [% ha.crm == 'pacemaker' ? 'true' : 'false' %]
    running: [% ha.crm == 'pacemaker' ? 'true' : 'false' %]

  prosody.service:
    enabled: [% general.process_handler == 'none' && prosody.enable == 'yes' ? 'true' : 'false' %]
    running: {{if and [% is_proxy && prosody.enable == "yes" ? 1 : 0 %] .Vars.NODE_ACTIVE}} true {{else}} false {{end}}

  ngcp-pushd.socket:
    enabled: [% general.process_handler == 'none' && is_lb && pushd.enable == "yes" ? 'true' : 'false' %]
    running: [% is_lb && pushd.enable == "yes" ? 'true' : 'false' %]

  [% database.key_value.flavor %]-server.service:
    enabled: [% redis.enable == "yes" ? 'true' : 'false' %]
    running: [% redis.enable == "yes" ? 'true' : 'false' %]

  redis-server.service:
    enabled: false
    running: false

  slapd.service:
    enabled: [% is_mgmt && ldap.enable == "yes" ? 'true' : 'false' %]
    running: [% is_mgmt && ldap.enable == "yes" ? 'true' : 'false' %]

  ngcp-sems-b2b.service:
    enabled: false
    running: {{if and [% is_proxy && b2b.enable == "yes" && general.ngcp_type != 'spce' ? 1 : 0 %] .Vars.NODE_ACTIVE}} true {{else}} false {{end}}

  ngcp-voisniff.service:
    enabled: false
    running: {{if and [% (is_proxy || is_li) && voisniff.daemon.enable == 'yes' ? 1 : 0 %] .Vars.NODE_ACTIVE}} true {{else}} false {{end}}

  ngcpcfg-api.service:
    enabled: [% is_mgmt && bootenv.ngcpcfg_api.enable == "yes" ? 'true' : 'false' %]
    running: [% is_mgmt && bootenv.ngcpcfg_api.enable == "yes" ? 'true' : 'false' %]

  ngcp-faxserver.service:
    enabled: false
    running: {{if and [% is_proxy && faxserver.enable == "yes" && general.ngcp_type != 'spce' ? 1 : 0 %] .Vars.NODE_ACTIVE}} true {{else}} false {{end}}

  snmpd.service:
    enabled: [% general.ngcp_type != 'spce' ? 'true' : 'false' %]
    running: [% general.ngcp_type != 'spce' ? 'true' : 'false' %]

  ngcp-snmp-agent.service:
    enabled: [% general.ngcp_type != 'spce' ? 'true' : 'false' %]
    running: [% general.ngcp_type != 'spce' ? 'true' : 'false' %]

  # Obsolete, never running.
  ngcp-rtcengine.service:
    enabled: false
    running: false

  ngcp-rest-api.service:
    enabled: [% is_mgmt && rest_api.enable == 'yes' ? 'true' : 'false' %]
    running: [% is_mgmt && rest_api.enable == 'yes' ? 'true' : 'false' %]

  # Obsolete, never running.
  janus.service:
    enabled: false
    running: false

  monit.service:
    enabled: [% general.process_handler == 'monit' ? 'true' : 'false' %]
    running: [% general.process_handler == 'monit' ? 'true' : 'false' %]
