[%
  PROCESS '/usr/lib/ngcp-ngcpcfg/get_hostname';
  hostname = out;

  argv.host = hostname;
  argv.role = 'proxy';
  PROCESS '/usr/lib/ngcp-ngcpcfg/has_role';
  is_proxy = out;

  argv.host = hostname;
  argv.role = 'lb';
  PROCESS '/usr/lib/ngcp-ngcpcfg/has_role';
  is_lb = out;

  argv.host = hostname;
  argv.role = 'mgmt';
  PROCESS '/usr/lib/ngcp-ngcpcfg/has_role';
  is_mgmt = out;

  argv.host = hostname;
  argv.role = 'db';
  PROCESS '/usr/lib/ngcp-ngcpcfg/has_role';
  is_db = out;

  argv.host = hostname;
  argv.role = 'rtp';
  PROCESS '/usr/lib/ngcp-ngcpcfg/has_role';
  is_rtp = out;

  argv.role = 'li';
  PROCESS '/usr/lib/ngcp-ngcpcfg/has_role';
  is_li = out;
  is_li_enabled = is_li && cluster_sets.type == 'distributed' && intercept.enable == 'yes';
-%]
[% PERL -%]
    my $node_state = qx(ngcp-check-active -v);
    chomp $node_state;

    $stash->set(node_state => $node_state);
[% END -%]

service:
  asterisk.service:
    enabled: [% general.process_handler == 'none' && asterisk.enable == "yes" ? 'true' : 'false' %]
    running: [% is_proxy && node_state == 'active' && asterisk.enable == "yes" ? 'true' : 'false' %]

  captagent.service:
    enabled: false
    running: [% ( is_proxy || is_rtp ) && intercept.enable == "yes" ? 'true' : 'false' %]

  coturn.service:
    enabled: false
    running: [% is_rtp && turnserver.enable == 'yes' ? 'true' : 'false' %]

  dnsmasq.service:
    enabled: false
    running: [% is_mgmt && bootenv.dhcp.enable == 'yes' ? 'true' : 'false' %]

  haproxy.service:
    enabled: false
    running: [% is_lb && haproxy.enable == "yes" ? 'true' : 'false' %]

  hb_watchdog.service:
    enabled: [% heartbeat.hb_watchdog.enable == 'yes' ? 'true' : 'false' %]
    running: [% heartbeat.hb_watchdog.enable == 'yes' ? 'true' : 'false' %]

  kamailio-lb.service:
    enabled: [% general.process_handler == 'none' && kamailio.lb.start == "yes" ? 'true' : 'false' %]
    running: [% is_lb && node_state == 'active' && kamailio.lb.start == "yes" ? 'true' : 'false' %]

  kamailio-proxy.service:
    enabled: [% general.process_handler == 'none' && kamailio.proxy.start == "yes" ? 'true' : 'false' %]
    running: [% is_proxy && node_state == 'active' && kamailio.proxy.start == "yes" ? 'true' : 'false' %]

  mediator.service:
    enabled: [% general.process_handler == 'none' && mediator.enable == 'yes' ? 'true' : 'false' %]
    running: [% is_proxy && node_state == 'active' && mediator.enable == 'yes' ? 'true' : 'false' %]

  ngcp-panel.service:
    enabled: [% is_mgmt && www_admin.enable == 'yes' ? 'true' : 'false' %]
    running: [% is_mgmt && www_admin.enable == 'yes' ? 'true' : 'false' %]

  ngcp-rate-o-mat.service:
    enabled: [% general.process_handler == 'none' && rateomat.enable == "yes" ? 'true' : 'false' %]
    running: [% is_proxy && node_state == 'active' && rateomat.enable == "yes" ? 'true' : 'false' %]

  ngcp-rtpengine-recording-daemon.service:
    enabled: [% general.process_handler == 'none' && rtpproxy.recording.enable == "yes" ? 'true' : 'false' %]
    running: [% is_rtp && node_state == 'active' && rtpproxy.recording.enable == "yes" ? 'true' : 'false' %]

  ngcp-rtpengine-daemon.service:
    enabled: [% general.process_handler == 'none' && rtpproxy.enable == "yes" ? 'true' : 'false' %]
    running: [% is_rtp && node_state == 'active' && rtpproxy.enable == "yes" ? 'true' : 'false' %]

  ngcp-sems.service:
    enabled: [% general.process_handler == 'none' && sems.enable == "yes" ? 'true' : 'false' %]
    running: [% is_proxy && node_state == 'active' && sems.enable == "yes" ? 'true' : 'false' %]

  ngcp-witnessd.service:
    enabled: true
    running: true

  nginx.service:
    enabled: [% nginx.enable == 'yes' ? 'true' : 'false' %]
    running: [% (is_mgmt || is_li_enabled) && nginx.enable == 'yes' ? 'true' : 'false' %]

  prosody.service:
    enabled: [% general.process_handler == 'none' && prosody.enable == 'yes' ? 'true' : 'false' %]
    running: [% is_proxy && node_state == 'active' && prosody.enable == 'yes' ? 'true' : 'false' %]

  ngcp-pushd.service:
    enabled: [% pushd.enable == "yes" ? 'true' : 'false' %]
    running: [% is_lb && pushd.enable == "yes" ? 'true' : 'false' %]

  redis-server.service:
    enabled: [% redis.enable == "yes" ? 'true' : 'false' %]
    running: [% (is_rtp || is_proxy || is_db) && redis.enable == "yes" ? 'true' : 'false' %]

  slapd.service:
    enabled: false
    running: [% is_mgmt && ldap.enable == "yes" ? 'true' : 'false' %]

  sems-pbx.service:
    enabled: false
    running: [% is_proxy && node_state == 'active' && pbx.enable == "yes" ? 'true' : 'false' %]

  voisniff-ng.service:
    enabled: false
    running: [% (is_proxy || is_lb || is_rtp) && node_state == 'active' && voisniff.daemon.start == 'yes' ? 'true' : 'false' %]

  ngcpcfg-api.service:
    enabled: [% is_mgmt && general.ngcp_type != 'spce' ? 'true' : 'false' %]
    running: [% is_mgmt && general.ngcp_type != 'spce' ? 'true' : 'false' %]

[% IF general.license_key != '' -%]
  ngcp-license-client.service:
    enabled: true
    running: true
[% END -%]
