[%
  hostname = ngcp.get_hostname();

  is_proxy = ngcp.has_role(hostname, 'proxy');
  is_lb = ngcp.has_role(hostname, 'lb');
  is_mgmt = ngcp.has_role(hostname, 'mgmt');
  is_db = ngcp.has_role(hostname, 'db');
  is_rtp = ngcp.has_role(hostname, 'rtp');
  is_li_dist = ngcp.has_role(hostname, 'li_dist');
-%]

service:
  asterisk.service:
    enabled: [% general.process_handler == 'none' && asterisk.enable == "yes" ? 'true' : 'false' %]
    running: {{if and [% is_proxy && asterisk.enable == "yes" ? 1 : 0 %] .Vars.NODE_ACTIVE}} true {{else}} false {{end}}

  corosync:
    enabled: [% ha.gcs == 'corosync' ? 'true' : 'false' %]
    running: [% ha.gcs == 'corosync' ? 'true' : 'false' %]

  coturn.service:
    enabled: [% is_rtp && turnserver.enable == 'yes' ? 'true' : 'false' %]
    running: [% is_rtp && turnserver.enable == 'yes' ? 'true' : 'false' %]

  dnsmasq.service:
    enabled: false
    running: {{if and [% is_mgmt && bootenv.dhcp.enable == "yes" ? 1 : 0 %] .Vars.NODE_ACTIVE}} true {{else}} false {{end}}

  haproxy.service:
    enabled: [% is_lb && haproxy.enable == "yes" && general.ngcp_type == 'carrier' ? 'true' : 'false' %]
    running: [% is_lb && haproxy.enable == "yes" && general.ngcp_type == 'carrier' ? 'true' : 'false' %]

  ngcp-hb-watchdog.service:
    enabled: [% ha.gcs == 'heartbeat-2' || ha.crm == 'heartbeat-2' && heartbeat.hb_watchdog.enable == 'yes' ? 'true' : 'false' %]
    running: [% ha.gcs == 'heartbeat-2' || ha.crm == 'heartbeat-2' && heartbeat.hb_watchdog.enable == 'yes' ? 'true' : 'false' %]

  kamailio-lb.service:
    enabled: [% general.process_handler == 'none' && kamailio.lb.start == "yes" ? 'true' : 'false' %]
    running: {{if and [% is_lb && kamailio.lb.start == "yes" ? 1 : 0 %] .Vars.NODE_ACTIVE}} true {{else}} false {{end}}

  kamailio-proxy.service:
    enabled: [% general.process_handler == 'none' && kamailio.proxy.start == "yes" ? 'true' : 'false' %]
    running: {{if and [% is_proxy && kamailio.proxy.start == "yes" ? 1 : 0 %] .Vars.NODE_ACTIVE}} true {{else}} false {{end}}

  ngcp-license-client.service:
    enabled: [% general.process_handler == 'none' && (general.license_key != '' || general.anonymous_usage_statistics == 'yes') ? 'true' : 'false' %]
    running: [% general.license_key != '' || general.anonymous_usage_statistics == 'yes' ? 'true' : 'false' %]

  ngcp-mediator.service:
    enabled: [% general.process_handler == 'none' && mediator.enable == 'yes' ? 'true' : 'false' %]
    running: {{if and [% is_proxy && mediator.enable == "yes" ? 1 : 0 %] .Vars.NODE_ACTIVE}} true {{else}} false {{end}}

  ngcp-panel.service:
    enabled: [% is_mgmt && www_admin.enable == 'yes' ? 'true' : 'false' %]
    running: [% is_mgmt && www_admin.enable == 'yes' ? 'true' : 'false' %]

  ngcp-rate-o-mat.service:
    enabled: [% general.process_handler == 'none' && rateomat.enable == "yes" ? 'true' : 'false' %]
    running: {{if and [% is_proxy && rateomat.enable == "yes" ? 1 : 0 %] .Vars.NODE_ACTIVE}} true {{else}} false {{end}}

  ngcp-rtpengine-recording-daemon.service:
    enabled: [% general.process_handler == 'none' && rtpproxy.recording.enable == "yes" ? 'true' : 'false' %]
    running: {{if and [% is_rtp && rtpproxy.recording.enable == "yes" ? 1 : 0 %] .Vars.NODE_ACTIVE}} true {{else}} false {{end}}

  ngcp-rtpengine-daemon.service:
    enabled: [% general.process_handler == 'none' && rtpproxy.enable == "yes" ? 'true' : 'false' %]
    running: {{if and [% is_rtp && rtpproxy.enable == "yes" ? 1 : 0 %] .Vars.NODE_ACTIVE}} true {{else}} false {{end}}

  ngcp-sems.service:
    enabled: [% general.process_handler == 'none' && sems.enable == "yes" ? 'true' : 'false' %]
    running: {{if and [% is_proxy && sems.enable == "yes" ? 1 : 0 %] .Vars.NODE_ACTIVE}} true {{else}} false {{end}}

  ngcp-witnessd.service:
    enabled: true
    running: true

  nginx.service:
    enabled: [% (is_mgmt || is_lb || is_li_dist) && nginx.enable == 'yes' ? 'true' : 'false' %]
    running: [% (is_mgmt || is_lb || is_li_dist) && nginx.enable == 'yes' ? 'true' : 'false' %]

  pacemaker.service:
    enabled: [% ha.crm == 'pacemaker' ? 'true' : 'false' %]
    running: [% ha.crm == 'pacemaker' ? 'true' : 'false' %]

  prosody.service:
    enabled: [% general.process_handler == 'none' && prosody.enable == 'yes' ? 'true' : 'false' %]
    running: {{if and [% is_proxy && prosody.enable == "yes" ? 1 : 0 %] .Vars.NODE_ACTIVE}} true {{else}} false {{end}}

  ngcp-pushd.service:
    enabled: [% is_lb && pushd.enable == "yes" ? 'true' : 'false' %]
    running: [% is_lb && pushd.enable == "yes" ? 'true' : 'false' %]

  redis-server.service:
    enabled: [% redis.enable == "yes" ? 'true' : 'false' %]
    running: [% redis.enable == "yes" ? 'true' : 'false' %]

  slapd.service:
    enabled: [% is_mgmt && ldap.enable == "yes" ? 'true' : 'false' %]
    running: [% is_mgmt && ldap.enable == "yes" ? 'true' : 'false' %]

  sems-pbx.service:
    enabled: false
    running: {{if and [% is_proxy && pbx.enable == "yes" ? 1 : 0 %] .Vars.NODE_ACTIVE}} true {{else}} false {{end}}

  ngcp-voisniff.service:
    enabled: false
    running: {{if and [% (is_proxy || is_lb || is_rtp) && voisniff.daemon.start == 'yes' ? 1 : 0 %] .Vars.NODE_ACTIVE}} true {{else}} false {{end}}

  ngcpcfg-api.service:
    enabled: [% is_mgmt && general.ngcp_type != 'spce' ? 'true' : 'false' %]
    running: [% is_mgmt && general.ngcp_type != 'spce' ? 'true' : 'false' %]

  ngcp-faxserver.service:
    enabled: false
    running: {{if and [% is_proxy && faxserver.enable == "yes" && general.ngcp_type != 'spce' ? 1 : 0 %] .Vars.NODE_ACTIVE}} true {{else}} false {{end}}

  influxdb-relay.service:
    enabled: [% general.ngcp_type != 'spce' ? 'true' : 'false' %]
    running: [% general.ngcp_type != 'spce' ? 'true' : 'false' %]

  snmpd.service:
    enabled: [% general.ngcp_type != 'spce' ? 'true' : 'false' %]
    running: [% general.ngcp_type != 'spce' ? 'true' : 'false' %]

  ngcp-snmp-agent.service:
    enabled: [% general.ngcp_type != 'spce' ? 'true' : 'false' %]
    running: [% general.ngcp_type != 'spce' ? 'true' : 'false' %]

[% IF general.license_key != '' -%]
  ngcp-license-client.service:
    enabled: true
    running: true

[% END -%]
  ngcp-rtcengine.service:
    enabled: false
    running: {{if and [% is_proxy && rtcengine.enable == "yes" && general.ngcp_type != 'spce' ? 1 : 0 %] .Vars.NODE_ACTIVE}} true {{else}} false {{end}}

  ngcp-comx-fileshare-service.service:
    enabled: false
    running: {{if and [% is_proxy && fileshare.enable == "yes" && general.ngcp_type != 'spce' ? 1 : 0 %] .Vars.NODE_ACTIVE}} true {{else}} false {{end}}

  janus.service:
    enabled: false
    running: {{if and [% is_proxy && (janus.enable == 'yes' || (rtcengine.conference.enable == 'yes' && rtcengine.conference.type == 'janus')) && general.ngcp_type != 'spce' ? 1 : 0 %] .Vars.NODE_ACTIVE}} true {{else}} false {{end}}

  monit.service:
    enabled: [% general.process_handler == 'monit' ? 'true' : 'false' %]
    running: [% general.process_handler == 'monit' ? 'true' : 'false' %]

[% IF general.ngcp_type != 'spce' -%]
  heartbeat.service:
    enabled: [% ha.gcs == 'heartbeat-2' || ha.crm == 'heartbeat-2' ? 'true' : 'false' %]
    running: [% ha.gcs == 'heartbeat-2' || ha.crm == 'heartbeat-2' ? 'true' : 'false' %]

[% END -%]
